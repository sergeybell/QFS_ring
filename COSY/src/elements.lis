 --- BIN FILE READ: utilities
  10269 INCLUDE 'utilities';
  10270   PROCEDURE ROTATE PHI;
  10271     VARIABLE M NM1 4;
  10272     VARIABLE ANG NM2;
  10273     VARIABLE I 1;
  10274     ANG := PHI*DEGRAD;
  10275     M(1):= COS(ANG)*MAP(1) + SIN(ANG)*MAP(3);
  10276     M(3):=-SIN(ANG)*MAP(1) + COS(ANG)*MAP(3);
  10277     M(2):= COS(ANG)*MAP(2) + SIN(ANG)*MAP(4);
  10278     M(4):=-SIN(ANG)*MAP(2) + COS(ANG)*MAP(4);
  10279     LOOP I 1 4;
  10280       MAP(I):=M(I);
  10281       ENDLOOP;
  10282     ENDPROCEDURE;
  10283   FUNCTION BMULT KNL L;
  10284     BMULT := KNL/L * CONS(CHIM);
  10285     ENDFUNCTION;
  10286   PROCEDURE THINMQ L     TILT       K1       ;
  10287     VARIABLE OM NM1;
  10288     WRITE 6 '***** THIN QUADRUPOLE DEFINITION';
  10289     OM := SQRT(ABS(K1));
  10290     UMS; %UMS: 1469
  10291     IF CONS(K1)>0;
  10292       MSC(2) := -OM*SIN(OM*L)*DD(1) + 1*DD(2);
  10293       MSC(4) := OM*SINH(OM*L)*DD(3) + 1*DD(4);
  10294       ELSEIF CONS(K1)<0;
  10295       MSC(2) := OM*SINH(OM*L)*DD(1) + 1*DD(2);
  10296       MSC(4) := -OM*SIN(OM*L)*DD(3) + 1*DD(4);
  10297       ELSEIF TRUE;
  10298       DL L; %DL: 6559
  10299       ENDIF;
  10300     LOCSET 0 0 0 0 0 0; %LOCSET: 1114
  10301     UPDATE 1 1; %UPDATE: 1261
  10302     ENDPROCEDURE;
  10303   PROCEDURE QUAD1 L     TILT G;
  10304     VARIABLE L0 1;
  10305     VARIABLE G0 1;
  10306     VARIABLE TILT0 1;
  10307     WRITE 6 'BNL TYPE QUAD IN NICA FS';
  10308     L0:=L;
  10309     IF (G=0);
  10310       WRITE 6 'G=0';
  10311       DL L0; %DL: 6559
  10312       ELSEIF (1=1);
  10313       G0:=G*10;
  10314       TILT0:=TILT;
  10315       ROTATE TILT0; %ROTATE:10270
  10316       WRITE 6 'B = '&ST(G0*.05);
  10317       MQ L0 G0*0.05 0.05; %MQ: 7076
  10318       ROTATE -TILT0; %ROTATE:10270
  10319       ENDIF;
  10320     ENDPROCEDURE;
  10321   PROCEDURE QUAD L     TILT       K1        ;
  10322     VARIABLE BPT NM1;
  10323     VARIABLE A 1;
  10324     VARIABLE TILT0 1;
  10325     TILT0 := RAD2DEG(TILT); %RAD2DEG: 9853
  10326     A:=.05;
  10327     BPT := K1*CONS(CHIM)*A;
  10328     IF BPT=0;
  10329       DL L; %DL: 6559
  10330       ELSEIF TRUE;
  10331       ROTATE  TILT0; %ROTATE:10270
  10332       MQ L BPT A; %MQ: 7076
  10333       ROTATE -TILT0; %ROTATE:10270
  10334       ENDIF;
  10335     ENDPROCEDURE;
  10336   PROCEDURE SEXT L     TILT       KNL       ;
  10337     VARIABLE BPT 1;
  10338     VARIABLE TILT0 1;
  10339     VARIABLE L0 1;
  10340     BPT := BMULT(KNL, L); %BMULT:10283
  10341     WRITE 6 'Bpt = '&SF(BPT, '(E15.7)'); %SF:  285
  10342     TILT0 := RAD2DEG(TILT); %RAD2DEG: 9853
  10343     IF BPT=0;
  10344       DL L; %DL: 6559
  10345       ELSEIF TRUE;
  10346       ROTATE TILT0; %ROTATE:10270
  10347       MH L BPT .05; %MH: 7153
  10348       ROTATE -TILT0; %ROTATE:10270
  10349       ENDIF;
  10350     ENDPROCEDURE;
  10351   PROCEDURE OCT L     TILT       KNL       ;
  10352     VARIABLE BPT 1;
  10353     VARIABLE TILT0 1;
  10354     BPT := BMULT(KNL, L); %BMULT:10283
  10355     WRITE 6 'Bpt = '&SF(BPT, '(E15.7)'); %SF:  285
  10356     IF BPT=0;
  10357       DL L; %DL: 6559
  10358       ELSEIF TRUE;
  10359       ROTATE TILT0; %ROTATE:10270
  10360       MO L BPT .05; %MO: 7198
  10361       ROTATE -TILT0; %ROTATE:10270
  10362       ENDIF;
  10363     ENDPROCEDURE;
  10364   PROCEDURE MULT TILT       KNL        N;
  10365     VARIABLE BPT 1 N;
  10366     VARIABLE I 1;
  10367     VARIABLE L0 1;
  10368     VARIABLE FLAG 1;
  10369     VARIABLE TILT0 1;
  10370     L0 := 0;
  10371     TILT0 := RAD2DEG(TILT); %RAD2DEG: 9853
  10372     IF N=2;
  10373       WRITE 6 'QUAD';
  10374       DL L0; %DL: 6559
  10375       ELSEIF N=3;
  10376       WRITE 6 'SEXT';
  10377       DL L0; %DL: 6559
  10378       ELSEIF N=4;
  10379       WRITE 6 'OCT';
  10380       DL L0; %DL: 6559
  10381       ELSEIF TRUE;
  10382       WRITE 6 '*** UNDEFINED ELEMENT ERROR ***';
  10383       ENDIF;
  10384     ENDPROCEDURE;
  10385   PROCEDURE SBEND L     ANGLE       TILT       E1       H1       E2   
                      H2      FINT        FINTX       ;
  10386     VARIABLE R 1;
  10387     VARIABLE ANGLE0 1;
  10388     VARIABLE TILT0 1;
  10389     VARIABLE E10 1;
  10390     VARIABLE E20 1;
  10391     E10 := E1/DEGRAD;
  10392     E20 := E2/DEGRAD;
  10393     ANGLE0 := ABS(ANGLE)/DEGRAD;
  10394     TILT0 := TILT/DEGRAD;
  10395     R := L/ABS(ANGLE);
  10396     IF ANGLE<0;
  10397       CB; %CB: 7026
  10398       ENDIF;
  10399     ROTATE TILT0; %ROTATE:10270
  10400     DI R ANGLE0 .1 E10 H1 E20 H2; %DI: 7796
  10401     ROTATE -TILT0; %ROTATE:10270
  10402     IF ANGLE<0;
  10403       CB; %CB: 7026
  10404       ENDIF;
  10405     ENDPROCEDURE;
  10406   PROCEDURE RBEND L     ANGLE       TILT      ;
  10407     VARIABLE R 1;
  10408     VARIABLE ANGLE_DEG 1;
  10409     VARIABLE TILT0 1;
  10410     VARIABLE NT 1;
  10411     VARIABLE KN 1 1;
  10412     VARIABLE S1 1 1;
  10413     VARIABLE S2 1 1;
  10414     VARIABLE B 1;
  10415     NT := 1;
  10416     B := CONS(P0)/(CLIGHT*1E-6) * ANGLE/L;
  10417     KN(1) := 0;
  10418     S1(1) := 0;
  10419     S2(1) := 0;
  10420     ANGLE_DEG := ABS(ANGLE)/DEGRAD;
  10421     TILT0 := TILT/DEGRAD;
  10422     R := L/ABS(ANGLE);
  10423     IF ANGLE<0;
  10424       CB; %CB: 7026
  10425       WRITE 6 'CB';
  10426       ENDIF;
  10427     ROTATE TILT0; %ROTATE:10270
  10428     DP R ANGLE_DEG .05; %DP: 7800
  10429     ROTATE -TILT0; %ROTATE:10270
  10430     IF ANGLE<0;
  10431       CB; %CB: 7026
  10432       ENDIF;
  10433     ENDPROCEDURE;
  10434   PROCEDURE SOL L     KS       ;
  10435     VARIABLE C 1;
  10436     VARIABLE S 1;
  10437     VARIABLE GAMMA NM1;
  10438     WRITE 6 '!!! ******** CUSTOM SOLENOID DEF';
  10439     C := COS(KS*L);
  10440     S := SIN(KS*L);
  10441     GAMMA := 1 + E0/(M0*AMUMEV) ;
  10442     UMS; %UMS: 1469
  10443     IF KS#0;
  10444       MSC(1) := 1*DD(1) + S/KS*DD(2)      + (1-C)/KS*DD(4);
  10445       MSC(2) :=           C*DD(2)         + S*DD(4);
  10446       MSC(3) :=         - (1-C)/KS*DD(2)  + S/KS*DD(4);
  10447       MSC(4) :=         - S*DD(2)         + C*DD(4);
  10448       MSC(5) := L/GAMMA/GAMMA;
  10449       ELSEIF TRUE;
  10450       DL L; %DL: 6559
  10451       ENDIF;
  10452     LOCSET 0 0 0 0 0 0 ; %LOCSET: 1114
  10453     UPDATE 1 1; %UPDATE: 1261
  10454     ENDPROCEDURE;
  10455   PROCEDURE SOLENOID_0 L     KS        ;
  10456     VARIABLE B0 1;
  10457     VARIABLE A 1;
  10458     VARIABLE MU 1 ;
  10459     VARIABLE N 1;
  10460     VARIABLE I 1;
  10461     MU := 1.2566E-6;
  10462     N := 100;
  10463     A  := .05;
  10464     B0 := KS * CONS(CHIM);
  10465     I  := 2*B0/MU/N;
  10466     IF (B0 = 0);
  10467       DL L; %DL: 6559
  10468       WRITE 6 'SOLENOID IS OFF';
  10469       ELSEIF TRUE;
  10470       CMS B0 A L; %CMS: 8043
  10471       ENDIF;
  10472     ENDPROCEDURE;
  10473   PROCEDURE SOLENOID L     KS        ;
  10474     VARIABLE B0 1;
  10475     VARIABLE A 1;
  10476     VARIABLE BTOP 1;
  10477     BTOP := 6;
  10478     A  := .05;
  10479     B0 := KS * CONS(CHIM);
  10480     WRITE 6 'SOLENOID MAGNETIC FIELD COMPUTED:'&SF(B0, '(F15.7)')&' Tl
                  '; %SF:  285
  10481     IF (B0>BTOP);
  10482       B0 := BTOP;
  10483       WRITE 6 'SOLENOID REACHED SATURATION; SETTING Btop FIELD (6T)!';

  10484       ENDIF;
  10485     IF (B0 = 0);
  10486       DL L; %DL: 6559
  10487       WRITE 6 'SOLENOID IS OFF';
  10488       ELSEIF TRUE;
  10489       CMS B0 A L; %CMS: 8043
  10490       ENDIF;
  10491     ENDPROCEDURE;
  10492   PROCEDURE RFCAV L     VOLT      LAG       HARMON       ;
  10493     IF VOLT=0;
  10494       DL L; %DL: 6559
  10495       ELSEIF TRUE;
  10496       WRITE 6 'UNIMPLEMENTED ERROR!';
  10497       ENDIF;
  10498     ENDPROCEDURE;
  10499   PROCEDURE KICK L     KX        KY       ;
  10500     IF ((KX=0) * (KY=0));
  10501       DL L; %DL: 6559
  10502       ELSEIF TRUE;
  10503       WRITE 6 'UNIMPLEMENTED ERROR!';
  10504       ENDIF;
  10505     ENDPROCEDURE;
  10506   PROCEDURE WIEN L2     B1       B2         TILT      ;
  10507     VARIABLE R1 1;
  10508     VARIABLE R2 1;
  10509     VARIABLE B0 1;
  10510     VARIABLE B3 1;
  10511     VARIABLE L1 1;
  10512     VARIABLE TILT0 1;
  10513     VARIABLE TOF 1;
  10514     VARIABLE BX 1;
  10515     VARIABLE EY 1;
  10516     VARIABLE BETA 1;
  10517     VARIABLE DWMDM 1;
  10518     L1:=L2;
  10519     B0:=ABS(B1)/10;
  10520     B3:=ABS(B2)*1E5;
  10521     R2:=CONS(CHIM)/B0;
  10522     R1:=CONS(CHIE)/B3;
  10523     TILT0 := TILT;
  10524     WF R1 R1 L1 0.05; %WF: 8570
  10525     IF TILT0#0;
  10526       BX := B0*TAN(TILT0);
  10527       EY := CONS(CHIE)/CONS(CHIM)*BX;
  10528       BETA := CONS(V0)/CLIGHT;
  10529       DWMDM := Z0/M0*EZERO/AMU*(G0*BX - (G0 - 1/BETA/BETA + 1)*BETA*EY
                  /CLIGHT);
  10530       TOF := L1/CONS(V0);
  10531       RSX TOF*DWMDM; %RSX: 9099
  10532       ENDIF;
  10533     ENDPROCEDURE;
  10534   PROCEDURE ED L     E         TILT      ;
  10535     VARIABLE I 1;
  10536     VARIABLE TILT0 1;
  10537     VARIABLE R_E 1;
  10538     VARIABLE E1 1;
  10539     VARIABLE ANGDEF 1;
  10540     E1:=E*1E5;
  10541     R_E:=(CONS(CHIE)/E1);
  10542     ANGDEF:=L/R_E;
  10543     WRITE 6 'E1' E1;
  10544     WRITE 6 'R_E' R_E;
  10545     WRITE 6 'ANGDEF' ANGDEF;
  10546     WRITE 6 '' ;
  10547     TILT0 := TILT;
  10548     ROTATE TILT0; %ROTATE:10270
  10549     ECL ABS(R_E) ANGDEF 0.1; %ECL: 8528
  10550     ROTATE -TILT0; %ROTATE:10270
  10551     ENDPROCEDURE;
  10552   PROCEDURE ELD L     E         TILT      ;
  10553     VARIABLE NE 1 5;
  10554     VARIABLE NM 1 5;
  10555     VARIABLE TILT0 1;
  10556     VARIABLE R_E 1;
  10557     VARIABLE I 1;
  10558     VARIABLE TILT0 1;
  10559     VARIABLE R_E 1;
  10560     VARIABLE E1 1;
  10561     VARIABLE ANGDEF 1;
  10562     E1:=E*1E5;
  10563     R_E:=(CONS(CHIE)/E1);
  10564     ANGDEF:=L/R_E;
  10565     NE(1):=-1;
  10566     NE(2):=1;
  10567     NE(3):=-1;
  10568     NE(4):=1;
  10569     NE(5):=-1;
  10570     NM(1):=0;
  10571     NM(2):=0;
  10572     NM(3):=0;
  10573     NM(4):=0;
  10574     NM(5):=0;
  10575     LOOP I 1 5;
  10576       NE(I):=NE(I)*(1/R_E)^I;
  10577       ENDLOOP;
  10578     TILT0 := TILT;
  10579     ROTATE TILT0; %ROTATE:10270
  10580     WC -R_E 10000000000000000 L 0.1 NE NM 5; %WC: 8554
  10581     ROTATE -TILT0; %ROTATE:10270
  10582     ENDPROCEDURE;
 --- BIN FILE WRITTEN: elements
  10583   SAVE 'elements';
