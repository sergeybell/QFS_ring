INCLUDE 'seq_QFS_16_small_maps';

PROCEDURE PICK INDEX MAPARR SPNRARR;
  VARIABLE I 1; VARIABLE J 1;
  LOOP I 1 TWOND;
    MSC(I) := MAPARR(I, INDEX);
  ENDLOOP;
  LOOP I 1 3;
    LOOP J 1 3;
      SSCR(I,J) := SPNRARR(I,J,INDEX) + 0*DD(1);
    ENDLOOP;
  ENDLOOP;
ENDPROCEDURE;

PROCEDURE MAKEMAP FROM TO START MAPARR SPNRARR; {lattice segment FROM index TO index, beginning at START index}
  VARIABLE J 1;
  WRITE 6 '* '&ST(START);
  LMAPS START MAPARR SPNRARR; {sets the MAP, SPNR transfer maps to those of the i-th element}
  LOOP J (START+1) TO;
    WRITE 6 '**       '&ST(J);
    PICK J MAPARR SPNRARR;
    LOCSET 0 0 0 0 0 0;
    UPDATE 1 1;
  ENDLOOP;
  LOOP J FROM (START-1);
    WRITE 6 '**       '&ST(J);
    PICK J MAPARR SPNRARR;
    LOCSET 0 0 0 0 0 0;
    UPDATE 1 1;
  ENDLOOP;
ENDPROCEDURE;

PROCEDURE GETTWISS0 COORD AL0 BET0 GAM0 MAPARR SPNRARR;
  VARIABLE NUM1 1;
  VARIABLE NUM2 1;
  VARIABLE OBJ 1;
  IF COORD='X'; NUM1:=1;NUM2:=2;      AL0:=0; BET0:=20.0; GAM0:=1.0/BET0;
  ELSEIF COORD='Y'; NUM1:=3;NUM2:=4;  AL0:=0; BET0:=3;    GAM0:=1.0/BET0;
  ELSEIF LO(1); WRITE 6 'UNKNOWN COORDINATE';
  ENDIF;
  FIT AL0 BET0 GAM0;
    OBJ:= SQR(SQR(ME(NUM1,NUM1))*BET0-2*ME(NUM1,NUM1)*ME(NUM1,NUM2)*AL0+SQR(ME(NUM1,NUM2))*GAM0-BET0);
    OBJ:=OBJ+ SQR(-ME(NUM1,NUM1)*ME(NUM2,NUM1)*BET0+( ME(NUM1,NUM1)*ME(NUM2,NUM2)+ME(NUM1,NUM2)*ME(NUM2,NUM1) )*AL0-ME(NUM1,NUM2)*ME(NUM2,NUM2)*GAM0-AL0);
    OBJ:=OBJ+ SQR((ME(NUM2,NUM1)^2)*BET0-2*ME(NUM2,NUM1)*ME(NUM2,NUM2)*AL0+(ME(NUM2,NUM2)^2)*GAM0-(1+AL0^2)/BET0)  ;
  ENDFIT 1E-20 5000 1 OBJ;
ENDPROCEDURE;

PROCEDURE BETS TAG COORD NUM_ELE AL0 BET0 GAM0 BETS MAPARR SPNRARR;
  VARIABLE J 1;
  VARIABLE NUM1 1;
  VARIABLE NUM2 1;
  IF COORD='X'; NUM1:=1;NUM2:=2;
  ELSEIF COORD='Y'; NUM1:=3;NUM2:=4;
  ELSEIF LO(1); WRITE 6 'UNKNOWN COORDINATE';
  ENDIF;
  UM;BETS(1):=BET0;
  OPENF 800 TAG 'REPLACE';
  WRITE 800 ST(BETS(1))&'     '&ST(0);
  LOOP J 1 NUM_ELE;
    MAKEMAP 1 J 1 MAPARR SPNRARR;
    BETS(J+1):=(ME(NUM1,NUM1)^2)*BET0-2*ME(NUM1,NUM1)*ME(NUM1,NUM2)*AL0+(ME(NUM1,NUM2)^2)*GAM0;
    WRITE 800 ST(BETS(J+1))&'     '&ST(J);
    UM;
  ENDLOOP;
  CLOSEF 800;
ENDPROCEDURE;

PROCEDURE GETDISP0 COORD D0 DPR0 MAPARR SPNRARR;
  VARIABLE NUM1 1;
  VARIABLE NUM2 1;
  VARIABLE OBJ 1;
  IF COORD='X'; NUM1:=1;NUM2:=2;      D0:=0; DPR0:=0;
  ELSEIF COORD='Y'; NUM1:=3;NUM2:=4;  D0:=0; DPR0:=0;
  ELSEIF LO(1); WRITE 6 'UNKNOWN COORDINATE';
  ENDIF;
  FIT D0 DPR0;
    OBJ:= SQR(  ME(NUM1,NUM1)*D0+ME(NUM1,NUM2)*DPR0+ME(NUM1,6)*(1+1/(CONS(ETA)+1))-D0  );
    OBJ:=OBJ+ SQR(  ME(NUM2,NUM1)*D0+ME(NUM2,NUM2)*DPR0+ME(NUM2,6)*(1+1/(CONS(ETA)+1))-DPR0  )  ;
  ENDFIT 1E-20 5000 1 OBJ;
  WRITE 6 'DISP'&COORD&'0' 'DISP_PRIME'&COORD&'0';
  WRITE 6 D0 DPR0;
ENDPROCEDURE;

PROCEDURE DISPS TAG COORD NUM_ELE D0 DPR0 DS MAPARR SPNRARR;
  VARIABLE J 1;
  VARIABLE NUM1 1;
  VARIABLE NUM2 1;
  IF COORD='X'; NUM1:=1;NUM2:=2;
  ELSEIF COORD='Y'; NUM1:=3;NUM2:=4;
  ELSEIF LO(1); WRITE 6 'UNKNOWN COORDINATE';
  ENDIF;
  UM;
  DS(1):=D0;
  OPENF 800 TAG 'REPLACE';
  WRITE 800 ST(DS(1))&'     '&ST(0);
  LOOP J 1 NUM_ELE;
    MAKEMAP 1 J 1 MAPARR SPNRARR;
    DS(J+1):=ME(NUM1,NUM1)*D0+ME(NUM1,NUM2)*DPR0+ ME(NUM1,6)*(1+1/(CONS(ETA)+1));
    WRITE 800 ST(DS(J+1))&'     '&ST(J);
  UM;ENDLOOP;
  CLOSEF 800;
ENDPROCEDURE;

PROCEDURE MAIN;
  VARIABLE GAMMA 1;
  VARIABLE SGx1 1; VARIABLE SGx2 1; VARIABLE SGy1 1; VARIABLE SGy2 1; VARIABLE EB1 1;

  VARIABLE ALPHAX0 1; VARIABLE BETAX0 1; VARIABLE GAMMAX0 1;
  VARIABLE BETAXS 1 313;
  VARIABLE ALPHAY0 1; VARIABLE BETAY0 1; VARIABLE GAMMAY0 1;
  VARIABLE BETAYS 1 313;
  VARIABLE DISPX0 1; VARIABLE DISPXPR0 1;
  VARIABLE DISPXS 1 313;
  VARIABLE DISPY0 1; VARIABLE DISPYPR0 1;
  VARIABLE DISPYS 1 313;
  VARIABLE MAPARR1 1000 6 313; VARIABLE SPNRARR1 1000 3 3 313;
  VARIABLE NUM_ELE 1;
  VARIABLE TILT 48;

  GAMMA := 1.143914;
  NUM_ELE := 70;

  OV 3 3 0;
  {DAEPS 1E-12;}
  { SET lattice parameters }
  SET_FOR_DEUTERONS GAMMA;

  {WIEN FILTER}
  {EB1 := 0.0;}
  EB1 := 89.04;

  {SEXTUPOLES}
  {natural chromaticity}
  SGx1 :=  0.0;
  SGy1  := 0.0;
  SGx2 :=  0.0;
  SGy2  := 0.0;

  {Nuclotron 16-period w WF arc+SS}
  BETAX0 :=1.00311;
  BETAY0 :=4.26415;
  ALPHAX0:=0.0;
  ALPHAY0:=0.0;
  GAMMAX0:=(1+SQR(ALPHAX0))/BETAX0;
  GAMMAY0:=(1+SQR(ALPHAY0))/BETAY0;

  DISPX0  :=0.0;
  DISPXPR0:=0.0;
  DISPY0  :=0.0;
  DISPYPR0:=0.0;
  
  LATTICE SGx1 SGy1 SGx2 SGy1 EB1 0 MAPARR1 SPNRARR1; PM 6;
  WRITE 6 '++++++++++ Magnetic Rigidity';
  WRITE 6 CONS(CHIM);
  WRITE 6 ME(3,6);

  {----------TWISS FUNCTIONS----------}
  {GETTWISS0 'X' ALPHAX0 BETAX0 GAMMAX0 MAPARR1 SPNRARR1;}
  {GETTWISS0 'Y' ALPHAY0 BETAY0 GAMMAY0 MAPARR1 SPNRARR1;}
  BETS 'BETAX' 'X' NUM_ELE ALPHAX0 BETAX0 GAMMAX0 BETAXS MAPARR1 SPNRARR1;
  BETS 'BETAY' 'Y' NUM_ELE ALPHAY0 BETAY0 GAMMAY0 BETAYS MAPARR1 SPNRARR1;

  {GETDISP0 'X' DISPX0 DISPXPR0 MAPARR1 SPNRARR1;}
  {GETDISP0 'Y' DISPY0 DISPYPR0 MAPARR1 SPNRARR1;}
  DISPS 'DISPX' 'X' NUM_ELE DISPX0 DISPXPR0 DISPXS MAPARR1 SPNRARR1;
  {DISPS 'DISPY' 'Y' NUM_ELE DISPY0 DISPYPR0 DISPYS MAPARR1 SPNRARR1;}

  ENDPROCEDURE; {MAIN}

PROCEDURE RUN;
  MAIN;
ENDPROCEDURE;
RUN; END;
